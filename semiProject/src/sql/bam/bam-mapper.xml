<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
<properties>
	<entry key="selectListCount">
	<!-- 대나무숲 게시글 갯수 카운트 -->
		SELECT COUNT(*) "COUNT"
		FROM BOARD
		WHERE BOARD_TYPE=2
		AND STATUS = 'Y'
	</entry>
	<entry key="searchTitleCount">
	<!-- 제목으로 검색했을때 게시글 갯수 공지사항 갯수 못세는 오류가 있음 -->
		SELECT COUNT(*) "COUNT"
		FROM BOARD
		WHERE BOARD_TYPE=2
		AND STATUS = 'Y'
		AND BOARD_TITLE LIKE ?
	</entry>
	<entry key="searchContentCount">
	<!-- 내용으로 검색했을때 게시글 갯수 -->
		SELECT COUNT(*) "COUNT"
		FROM BOARD
		WHERE BOARD_TYPE=2
		AND STATUS = 'Y'
		AND BOARD_CONTENT LIKE ?
	</entry>
	<entry key="selectList">
	<!-- 대나무숲 게시글 페이지 목록으로 쓸 데이터 조회 -->
	SELECT *	
	FROM(SELECT ROWNUM RNUM, A.*
		 FROM(SELECT BOARD_NO,USERNO
		 			,DECODE(BAM_CATEGORY_NO, '1', '일반', '2', '질문', '3', '연애','4','공지') "BAM_CATEGORY_NO",BOARD_TITLE
		 			,BOARD_CONTENT,CREATE_DATE
		 			,GOOD,COUNT
		 			,FILE_NO
                FROM BOARD B
                LEFT JOIN ATTACHMENT USING(BOARD_NO)
                JOIN CATEGORY_BAM USING (BOARD_NO)
                WHERE BOARD_TYPE=2
                AND B.STATUS = 'Y'
                AND TYPE_NO = 0
                ORDER BY BOARD_NO DESC) A)
	WHERE RNUM BETWEEN ? AND ?	  
	</entry>
	<entry key="selectNoticeList">
	<!-- 공지사항 조회 -->
	SELECT BOARD_NO,DECODE(BAM_CATEGORY_NO, '1', '일반', '2', '질문', '3', '연애','4','공지') "BAM_CATEGORY_NO",USERNO,BOARD_TITLE,BOARD_CONTENT,CREATE_DATE,GOOD,FILE_NO,COUNT
	FROM BOARD B
	JOIN CATEGORY_BAM USING (BOARD_NO)
	LEFT JOIN ATTACHMENT USING (BOARD_NO)
	WHERE BOARD_TYPE =2
	AND B.STATUS = 'Y'
	AND TYPE_NO = 1
	ORDER BY BOARD_NO DESC
	</entry>
	<entry key="searchTitleList">
	<!-- 제목으로 검색해서 게시글 조회 -->
	SELECT *	
	FROM(SELECT ROWNUM RNUM, A.*
		 FROM(SELECT BOARD_NO,USERNO
		 			,DECODE(BAM_CATEGORY_NO, '1', '일반', '2', '질문', '3', '연애','4','공지') "BAM_CATEGORY_NO",BOARD_TITLE
		 			,BOARD_CONTENT,CREATE_DATE
		 			,GOOD,FILE_NO
		 			,COUNT
                FROM BOARD B
                JOIN CATEGORY_BAM USING (BOARD_NO)
                LEFT JOIN ATTACHMENT USING (BOARD_NO)
                WHERE BOARD_TYPE=2
                AND B.STATUS = 'Y'
                AND TYPE_NO = 0
                AND BOARD_TITLE LIKE ?
                ORDER BY BOARD_NO DESC) A)
	WHERE RNUM BETWEEN ? AND ?
	</entry>
	<entry key="searchContentList">
	<!-- 내용으로 검색해서 게시글 조회 -->
	SELECT *	
	FROM(SELECT ROWNUM RNUM, A.*
		 FROM(SELECT BOARD_NO,USERNO
		 			,DECODE(BAM_CATEGORY_NO, '1', '일반', '2', '질문', '3', '연애','4','공지') "BAM_CATEGORY_NO",BOARD_TITLE
		 			,BOARD_CONTENT,CREATE_DATE
		 			,GOOD,FILE_NO
		 			,COUNT
                FROM BOARD B
                JOIN CATEGORY_BAM USING (BOARD_NO)
                LEFT JOIN ATTACHMENT USING (BOARD_NO)
                WHERE BOARD_TYPE=2
                AND B.STATUS = 'Y'
                AND TYPE_NO = 0
                AND BOARD_CONTENT LIKE ?
                ORDER BY BOARD_NO DESC) A)
	WHERE RNUM BETWEEN ? AND ?
	</entry>
	<entry key="insertBam">
	<!-- 대나무숲 게시글 인서트+대나무숲카테고리 인서트 -->
	INSERT ALL
	INTO BOARD (BOARD_NO,USERNO,BOARD_TYPE,BOARD_TITLE,BOARD_CONTENT)VALUES (SEQ_BNO.NEXTVAL,?,2,?,?)
	INTO CATEGORY_BAM (BOARD_NO,BAM_CATEGORY_NO) VALUES (SEQ_BNO.CURRVAL,?)
	SELECT * FROM DUAL
	</entry>
	<entry key="insertNoticeBam">
	<!-- 공지사항 작성 -->
	INSERT ALL
	INTO BOARD (BOARD_NO,USERNO,BOARD_TYPE,BOARD_TITLE,BOARD_CONTENT,TYPE_NO)VALUES (SEQ_BNO.NEXTVAL,?,2,?,?,1)
	INTO CATEGORY_BAM (BOARD_NO,BAM_CATEGORY_NO) VALUES (SEQ_BNO.CURRVAL,4)
	SELECT * FROM DUAL
	</entry>
	<entry key="insertAttachment">
	<!-- 대나무숲 첨부파일 인서트 -->
	INSERT INTO ATTACHMENT (FILE_NO,BOARD_NO,ORIGIN_NAME,CHANGE_NAME,FILE_PATH)
	VALUES (SEQ_FNO.NEXTVAL,SEQ_BNO.CURRVAL,?,?,?)
	</entry>
	<entry key="increaseCount">
	<!-- 대나무숲 조회수 증가 -->
	UPDATE BOARD
	SET COUNT = COUNT + 1
	WHERE STATUS = 'Y'
	AND BOARD_NO = ?
	</entry>
	<entry key="selectBam">
	<!-- 대나무숲 게시글 조회 -->
	SELECT BOARD_NO,USERNO,DECODE(BAM_CATEGORY_NO, '1', '일반', '2', '질문', '3', '연애', '4','공지') "BAM_CATEGORY_NO",BOARD_TITLE,BOARD_CONTENT,CREATE_DATE,MODIFY_DATE,GOOD,COUNT
	FROM BOARD
    JOIN CATEGORY_BAM USING (BOARD_NO)
	WHERE BOARD_NO = ?
	AND STATUS = 'Y'
	</entry>
	<entry key="selectAttachment">
	<!-- 대나무숲 첨부파일 조회 -->
	SELECT FILE_NO,ORIGIN_NAME,CHANGE_NAME,FILE_PATH,UPLOAD_DATE
	FROM ATTACHMENT
	WHERE BOARD_NO = ?
	AND STATUS = 'Y'
	</entry>
	<entry key="deleteBam">
	<!-- 대나무숲 게시글 삭제(상테창변경) -->
	UPDATE BOARD
	SET STATUS = 'N'
	WHERE BOARD_NO = ?
	AND STATUS = 'Y'
	</entry>
	<entry key="updateBam">
	<!-- 대나무숲 게시글 수정 -->
	UPDATE BOARD
	SET BOARD_TITLE = ?
	, 	BOARD_CONTENT = ?
	,  	MODIFY_DATE =SYSDATE
	WHERE BOARD_NO = ?
	AND STATUS = 'Y'
	</entry>
	<entry key="updateBamCategory">
	<!-- 대나무숲 카테고리 수정 -->
	UPDATE CATEGORY_BAM
	SET BAM_CATEGORY_NO = ?
	WHERE BOARD_NO = ?
	</entry>
	<entry key="updateAttachment">
	<!--대나무숲 첨부파일 수정  -->
	UPDATE ATTACHMENT
	SET ORIGIN_NAME = ?
	, 	CHANGE_NAME = ?
	,	FILE_PATH = ?
	,	UPLOAD_DATE = SYSDATE
	WHERE FILE_NO = ?
	AND STATUS = 'Y'
	</entry>
	<entry key="newInsertAttachment">
	<!-- 대나무숲 게시글 수정할때 새로 첨부파일 넣은경우 -->
	INSERT INTO ATTACHMENT(FILE_NO,BOARD_NO,ORIGIN_NAME,CHANGE_NAME,FILE_PATH)
	VALUES (SEQ_FNO.NEXTVAL,?,?,?,?)
	</entry>
	<entry key="insertReply">
	<!-- 댓글 작성 -->
	INSERT INTO REPLY(REPLY_NO,BOARD_NO,REPLY_CONTENT,USERNO)
	VALUES (SEQ_RNO.NEXTVAL,?,?,?)
	</entry>
	<entry key="selectReplyList">
	<!-- 한 게시글 댓글들 조회 -->
	SELECT REPLY_NO,BOARD_NO,USERNO,REPLY_CONTENT,CREATE_DATE
	FROM REPLY
	WHERE BOARD_NO=?
	AND STATUS = 'Y'
	</entry>
	<entry key="selectReply">
	<!-- 댓글 한개 정보 조회 -->
	SELECT REPLY_NO,BOARD_NO,USERNO,REPLY_CONTENT,CREATE_DATE
	FROM REPLY
	WHERE REPLY_NO = ?
	AND STATUS = 'Y'
	</entry>
	<entry key="deleteReply">
	<!-- 댓글 삭제 -->
	UPDATE REPLY
	SET STATUS = 'N'
	WHERE STATUS = 'Y'
	AND REPLY_NO = ?
	</entry>
	<entry key="reportBam">
	<!-- 게시글 신고 카운트 -->
	UPDATE BOARD
	SET REPORT = REPORT+1
	,   STATUS = CASE WHEN (REPORT=10) THEN 'N'
                  ELSE 'Y'
                  END
	WHERE BOARD_NO = ?
	AND STATUS = 'Y' 
	</entry>
	<entry key="reportInsertBam">
	<!-- 신고 중복방지 테이블 인서트 -->
	INSERT INTO BTNCHECK (BOARD_NO,USERNO,BTNTYPE)
	VALUES (?,?,'신고')
	</entry>
	<entry key="selectBtnCheck">
	<!-- 하려는 행동이 중복인지 -->
	SELECT BOARD_NO,USERNO,BTNTYPE
	FROM BTNCHECK
	WHERE BOARD_NO = ?
	AND USERNO = ?
	</entry>
	<entry key="updateBamGood">
	<!-- 게시글 조회수 증가 -->
	UPDATE BOARD
	SET GOOD = GOOD+1
	WHERE BOARD_NO = ?
	AND STATUS = 'Y'
	</entry>
	<entry key="cancelBamGood">
	UPDATE BOARD
	SET GOOD = GOOD-1
	WHERE BOARD_NO = ?
	AND STATUS = 'Y'
	</entry>
	<entry key="insertBamGood">
	<!-- 중복방지 테이블에 추천했다고 인서트 -->
	INSERT INTO BTNCHECK VALUES(?,?,'추천')
	</entry>
	<entry key="deleteBtnCheck">
	<!-- 추천 취소되서 중복방지 테이블에서 삭제 -->
	DELETE FROM BTNCHECK
	WHERE BOARD_NO = ?
	AND USERNO = ?
	</entry>
	<entry key="deleteGoodBtnCheck">
	<!-- 중복방지 테이블에서 신고만 나두고 추천만 삭제 -->
	UPDATE BTNCHECK
	SET BTNTYPE = REPLACE(BTNTYPE,'추천','')
	WHERE BOARD_NO = ?
	AND USERNO = ?
	</entry>
	<entry key="updateGoodBtnCheck">
	<!-- 중복방지 테이블에서 신고에 추천 추가 -->
	UPDATE BTNCHECK
	SET BTNTYPE = '추천'||BTNTYPE
	WHERE BOARD_NO = ?
	AND USERNO = ?
	</entry>
	<entry key="updateReportBtnCheck">
	<!-- 중복방지 테이블에서 추천에 신고 추가 -->
	UPDATE BTNCHECK
	SET BTNTYPE = BTNTYPE||'신고'
	WHERE BOARD_NO = ?
	AND USERNO = ?
	</entry>

</properties>